<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Apache ServiceMix Archetype -->
<beans xmlns:quartz="http://servicemix.apache.org/quartz/1.0"
    xmlns:replaceMe="http://servicemix.apache.org/replaceMe" 
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
       http://servicemix.apache.org/quartz/1.0 http://servicemix.apache.org/schema/servicemix-quartz-2013.01.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- 
        The ServiceMix Quartz component is able to schedule and trigger jobs using the Quartz scheduler.
        
            http://servicemix.apache.org/servicemix-quartz.html
            http://www.quartz-scheduler.org/
    -->

    <!-- BEGIN SNIPPET: cron-trigger -->
    <!-- 
       The Cron Trigger endpoint use a Quartz cron.
       A cron looks like a Unix crontab entry to define event firing.
       
       Attributes:
           service                     : the endpoint service name
           endpoint                    : the endpoint name
           targetService               : the target endpoint service name
           targetEndpoint              : the target endpoint name
           trigger                     : the Quartz trigger to use
                                         Here we use a <quartz:cron/> with the cronExpression attribute
    -->
    <quartz:endpoint service="replaceMe:serviceName"
        endpoint="cron-trigger" 
        targetService="replaceMe:targetServiceName"
        targetEndpoint="targetEndpoint">
        <quartz:trigger>
            <quartz:cron cronExpression="0/5 * * * * ?" />
        </quartz:trigger>
    </quartz:endpoint>
    <!-- END SNIPPET: cron-trigger -->
    
    <!-- BEGIN SNIPPET: simple-trigger -->
    <!-- 
       The Simple Trigger endpoint use a Quartz simple trigger.
       A Simple Trigger simply fires event at a given interval.
       
       Attributes:
           service                     : the endpoint service name
           endpoint                    : the endpoint name
           targetService               : the target endpoint service name
           targetEndpoint              : the target endpoint name
           trigger                     : the Quartz trigger to use
                                         Here we use a <quartz:simple/> with repeatCount and repeatInterval attributes
    -->
    <quartz:endpoint service="replaceMe:serviceName"
        endpoint="simple-trigger" 
        targetService="replaceMe:targetServiceName"
        targetEndpoint="targetEndpoint">
        <quartz:trigger>
            <quartz:simple repeatCount="0" repeatInterval="1000" />
        </quartz:trigger>
    </quartz:endpoint>
    <!-- END SNIPPET:  -->
    
    <!-- BEGIN SNIPPET: quartz-custom-marshaler -->
    <!--
       This sample shows the usage of a custom marshaler defining the jobDetail map content.
    -->
    <quartz:endpoint service="replaceMe:serviceName"
        endpoint="quartz-custom-marshaler" 
        targetService="replaceMe:targetServiceName"
        targetEndpoint="targetEndpoint">
        <quartz:jobDetail>
            <quartz:jobDetail>
                <quartz:jobDataAsMap>
                    <quartz:property key="xml"><![CDATA[
              <hello>world</hello>
            ]]></quartz:property>
                </quartz:jobDataAsMap>
            </quartz:jobDetail>
        </quartz:jobDetail>

        <quartz:triggers>
            <quartz:simple repeatCount="0" repeatInterval="1000" />
            <quartz:cron cronExpression="0 * 1 * * ?" />
        </quartz:triggers>

        <quartz:marshaler>
            <bean class="CustomMarshaler" />
        </quartz:marshaler>

    </quartz:endpoint>
    <!-- END SNIPPET: quartz-custom-marshaler -->

</beans>
